{"file_contents":{"replit.md":{"content":"# Overview\n\nThis is a Digital Library Management System (Perpustakaan Digital) built as a web application. The system provides functionality for managing books, members, and library operations through both a public frontend interface and an administrative backend dashboard. The application uses modern web technologies with a focus on responsive design and user experience.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe application follows a multi-page static website architecture with separate HTML pages for different functionalities:\n\n- **Public Interface**: Modern, responsive design using Tailwind CSS with gradient backgrounds and glassmorphism effects\n- **Admin Interface**: Bootstrap-based dashboard with sidebar navigation and data table management\n- **Mobile-First Design**: Responsive navigation with mobile menu toggles and adaptive layouts\n- **Component Structure**: Modular page organization with consistent navigation across all pages\n\n## Design System\n- **CSS Framework**: Tailwind CSS for the public interface, Bootstrap 5 for admin dashboard\n- **Icons**: FontAwesome 6 for consistent iconography\n- **Typography**: Clean, modern fonts with gradient text effects for branding\n- **Color Scheme**: Blue and indigo gradients with slate gray accents for professional appearance\n\n## JavaScript Architecture\n- **Client-Side Interactivity**: Vanilla JavaScript for basic interactions and form handling\n- **Data Tables**: jQuery DataTables integration for admin data management with Indonesian localization\n- **Form Validation**: Client-side validation with visual feedback\n- **Mobile Navigation**: JavaScript-powered responsive menu system\n\n## Page Structure\n- **Public Pages**: Home, Books, Members, Member Check, Search, Login, Register\n- **Admin Pages**: Dashboard, User Management, Book Management, Loan Management, Other Management\n- **Shared Components**: Consistent navigation bar, footer, and styling across pages\n\n## Data Management\nThe frontend is designed to work with a backend system for:\n- **User Authentication**: Login and registration workflows\n- **Book Catalog**: Display and search functionality\n- **Member Management**: Registration and verification\n- **Loan Tracking**: Borrowing and return processes\n\n# External Dependencies\n\n## CDN Services\n- **Tailwind CSS**: Latest version via CDN for rapid styling\n- **Bootstrap 5.3.8**: For admin dashboard components and layout\n- **FontAwesome 6.4.0**: Icon library for UI elements\n- **jQuery 3.7.1**: Required for DataTables functionality\n- **DataTables 1.13.7**: Advanced table management with Bootstrap integration\n\n## Third-Party Integrations\n- **DataTables**: Provides sorting, searching, pagination, and responsive table features\n- **Bootstrap Components**: Tooltips, popovers, and responsive grid system\n- **Google Fonts**: Potential integration for custom typography (referenced but not implemented)\n\n## Asset Management\n- **Images**: Logo and other visual assets stored in assets/img/ directory\n- **CSS**: Custom styles in assets/css/ with minimal custom CSS due to utility-first approach\n- **JavaScript**: Modular JS files in assets/js/ for specific functionality\n\n## Browser Compatibility\n- Modern browser support through CSS Grid, Flexbox, and ES6+ JavaScript\n- Progressive enhancement for older browser fallbacks\n- Responsive design for mobile, tablet, and desktop viewports","size_bytes":3445},"script.js":{"content":"","size_bytes":0},"assets/css/style.css":{"content":"/* Only Tailwind CSS - All styles are handled by Tailwind classes */","size_bytes":68},"assets/js/main.js":{"content":"// Digital Library Main JavaScript\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Add fade-in animation to main content\n    const mainContent = document.querySelector('main');\n    if (mainContent) {\n        mainContent.classList.add('fade-in');\n    }\n\n    // Add hover effects to cards\n    const cards = document.querySelectorAll('.bg-white');\n    cards.forEach(card => {\n        card.classList.add('card-hover');\n    });\n\n    // Form validation\n    const forms = document.querySelectorAll('form');\n    forms.forEach(form => {\n        form.addEventListener('submit', function(e) {\n            const inputs = form.querySelectorAll('input[required]');\n            let isValid = true;\n            \n            inputs.forEach(input => {\n                if (!input.value.trim()) {\n                    isValid = false;\n                    input.classList.add('border-red-500');\n                } else {\n                    input.classList.remove('border-red-500');\n                }\n            });\n            \n            if (!isValid) {\n                e.preventDefault();\n                alert('Mohon lengkapi semua field yang diperlukan');\n            }\n        });\n    });\n\n    // Table search functionality\n    const searchInputs = document.querySelectorAll('[data-search]');\n    searchInputs.forEach(input => {\n        input.addEventListener('input', function() {\n            const searchTerm = this.value.toLowerCase();\n            const tableRows = document.querySelectorAll('.table-row');\n            \n            tableRows.forEach(row => {\n                const text = row.textContent.toLowerCase();\n                if (text.includes(searchTerm)) {\n                    row.style.display = '';\n                } else {\n                    row.style.display = 'none';\n                }\n            });\n        });\n    });\n});","size_bytes":1848}},"version":1}